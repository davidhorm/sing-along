{"version":3,"sources":["MusicVideos.ts","components/Directory/ShuffleButton.tsx","components/Directory/Directory.tsx","hooks/useYouTube.tsx","components/Karaoke/Lyrics.tsx","components/Karaoke/Karaoke.tsx","components/KaraokeByShuffle/KaraokeByShuffle.tsx","components/KaraokeByVideoId/KaraokeByVideoId.tsx","components/SyncLyrics.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MusicVideos","videoId","songTitle","songArtist","cc","ShuffleButton","to","Button","size","variant","style","margin","endIcon","xmlns","width","height","viewBox","fill","d","useStyles","makeStyles","label","flexDirection","minWidth","card","maxWidth","cardMedia","cardTitle","fontSize","fontWeight","Directory","classes","className","sort","a","b","localeCompare","map","youtubeThumbnailSrc","youtubeThumbnailAlt","ifNeedsEditPath","Card","CardActionArea","CardMedia","component","alt","title","image","CardContent","Typography","gutterBottom","color","disableFullscreenOnIOS","includes","navigator","platform","userAgent","document","useYouTube","onVideoEnd","milliseconds","setMilliseconds","useState","useEffect","playerOptions","playerVars","cc_load_policy","undefined","iv_load_policy","playsinline","modestbranding","getYouTubePlayerOptions","player","YouTubePlayer","timer","loadVideoById","stopTimer","clearInterval","listener","on","event","PLAYING","PAUSED","ENDED","window","YT","PlayerState","data","async","seconds","getCurrentTime","setInterval","value","startTimer","off","destroy","Lyrics","lrcData","setLrcData","lyricUrl","fetch","then","response","text","lineRenderer","useCallback","lrcLine","active","content","lrc","currentTime","spaceTop","Karaoke","id","randomSongList","Math","random","KaraokeByShuffle","shuffleIndex","useParams","randomIndex","parseInt","length","song","history","useHistory","replace","key","KaraokeByVideoId","selectedSong","filter","SyncLyrics","lyricLines","setLyricLines","youTubeTime","display","border","onChange","e","target","split","onClick","current","array","_","index","paddingLeft","maxHeight","overflow","lyric","timestamp","Date","toISOString","substring","darkTheme","createTheme","palette","type","App","ThemeProvider","theme","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e6742b63.chunk.js","sourcesContent":["export type MusicVideo = {\n  videoId: string;\n  songTitle: string;\n  songArtist: string;\n  cc?:\n    | 'CLOSED_CAPTIONS' // display closed-captions in YouTube\n    | 'LYRIC_VIDEO'; // don't display closed-captions or load lyric file because video has lyrics already\n};\n\nexport const MusicVideos: MusicVideo[] = [\n  {\n    videoId: 'aAkMkVFwAoo',\n    songTitle: 'All I Want for Christmas Is You',\n    songArtist: 'Mariah Carey',\n  },\n  {\n    videoId: 'k4s1wSCvs8k',\n    songTitle: 'Let It Snow',\n    songArtist: 'Boyz II Men ft. Brian McKnight',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'e_AMTbO50vU',\n    songTitle: 'A Holly Jolly Christmas',\n    songArtist: 'Burl Ives',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'DocgDlM6zHI',\n    songTitle: \"I'll Be Home For Christmas + Cozy Little Christmas\",\n    songArtist: 'Katy Perry',\n    cc: 'LYRIC_VIDEO',\n  },\n  {\n    videoId: 'PF-R5ZaG71I',\n    songTitle: 'Feliz Navidad',\n    songArtist: 'Pee Wee & Charo',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'txw4gOK2alU',\n    songTitle: 'What Christmas Means To Me',\n    songArtist: 'Ciara',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: '0iAZWhOaHaM',\n    songTitle: 'This Christmas',\n    songArtist: 'Ne-Yo',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'g_kj60DIq2M',\n    songTitle: 'Happy Xmas (War Is Over)',\n    songArtist: 'John Lennon & Yoko Ono',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'tIyE3IrC7r0',\n    songTitle: \"Like It's Christmas\",\n    songArtist: 'Jonas Brothers',\n    cc: 'LYRIC_VIDEO',\n  },\n  {\n    videoId: 'E8gmARGvPlI',\n    songTitle: 'Last Christmas',\n    songArtist: 'Wham!',\n  },\n  {\n    videoId: 'nlR0MkrRklg',\n    songTitle: 'Santa Tell Me',\n    songArtist: 'Ariana Grande',\n  },\n  {\n    videoId: 'LUjn3RpkcKY',\n    songTitle: 'Mistletoe',\n    songArtist: 'Justin Bieber',\n  },\n  {\n    videoId: '7mKRN79ter8',\n    songTitle: \"Rockin' Around The Christmas Tree\",\n    songArtist: 'Ingrid Michaelson ft. Grace VanderWaal',\n  },\n  {\n    videoId: 'wKhRnZZ0cJI',\n    songTitle: 'The Christmas Song (Merry Christmas To You)',\n    songArtist: 'Nat King Cole',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'wO6Kubm5tyE',\n    songTitle: 'Blue Christmas',\n    songArtist: 'Elvis Presley',\n  },\n  {\n    videoId: 'sE3uRRFVsmc',\n    songTitle: 'Let It Snow! Let It Snow! Let It Snow!',\n    songArtist: 'Frank Sinatra',\n  },\n  {\n    videoId: 'HTCFi4l3nkY',\n    songTitle: 'Santa Baby',\n    songArtist: 'Eartha Kitt',\n  },\n  {\n    videoId: 'DkXIJe8CaIc',\n    songTitle: 'Sleigh Ride',\n    songArtist: 'The Ronettes',\n  },\n  {\n    videoId: 'UwKcjAHIdJQ',\n    songTitle: 'Where Are You Christmas',\n    songArtist: 'Faith Hill',\n  },\n  {\n    videoId: '5vyMuxxLsD0',\n    songTitle: 'Jingle Bell Rock',\n    songArtist: 'Daryl Hall & John Oates',\n  },\n  {\n    videoId: 'gcPY3RIvtCw',\n    songTitle: 'Hard Candy Christmas',\n    songArtist: 'Dolly Parton',\n  },\n  {\n    videoId: 'wKj92352UAE',\n    songTitle: 'Merry Christmas, Happy Holidays',\n    songArtist: 'NSYNC',\n  },\n  {\n    videoId: 'j7Tksexm680',\n    songTitle: 'My Only Wish (This Year)',\n    songArtist: 'Britney Spears',\n    cc: 'LYRIC_VIDEO',\n  },\n  {\n    videoId: '62rmjtZdCv8',\n    songTitle: 'Sleigh Ride',\n    songArtist: 'TLC',\n  },\n  {\n    videoId: 'EM2Fnp_qnE8',\n    songTitle: 'Underneath the Tree',\n    songArtist: 'Kelly Clarkson',\n  },\n  {\n    videoId: 'G2bx3FzgJ6o',\n    songTitle: 'Oh Santa!',\n    songArtist: 'Mariah Carey ft. Ariana Grande & Jennifer Hudson',\n  },\n  {\n    videoId: 'V3EYjVPRClU',\n    songTitle: \"Santa's Coming For Us\",\n    songArtist: 'Sia',\n  },\n  {\n    videoId: 'YiadNVhaGwk',\n    songTitle: 'Run Rudolph Run',\n    songArtist: 'Chuck Berry',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'xp9rK8FmYog',\n    songTitle: 'Little Saint Nick',\n    songArtist: 'The Beach Boys',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'IuDUoAmhonE',\n    songTitle: 'This Gift',\n    songArtist: '98º',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'GP5_dJUd3BY',\n    songTitle: 'Winter Wonderland',\n    songArtist: 'Bing Crosby',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'qUCNAnp2QAI',\n    songTitle: 'The Chanukah Song',\n    songArtist: 'Adam Sandler',\n  },\n  {\n    videoId: 'QLvvkTbHjHI',\n    songTitle: \"What's This\",\n    songArtist: 'The Nightmare Before Christmas',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'XFF99j-0e84',\n    songTitle: 'Please Come Home for Christmas',\n    songArtist: 'Jon Bon Jovi',\n  },\n  {\n    videoId: 'j-_1-uJ6Ml4',\n    songTitle: 'One More Sleep',\n    songArtist: 'Leona Lewis',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'hLf0-lro8X8',\n    songTitle: 'Jingle Bells',\n    songArtist: 'Frank Sinatra',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'uoMHmsL2t3A',\n    songTitle: 'Step Into Christmas',\n    songArtist: 'Elton John',\n    cc: 'LYRIC_VIDEO',\n  },\n  {\n    videoId: 'uSjq7x67kzM',\n    songTitle: 'Driving Home For Christmas',\n    songArtist: 'Chris Rea',\n    cc: 'LYRIC_VIDEO',\n  },\n  {\n    videoId: '3ZT9_H4-hbM',\n    songTitle: 'You Make It Feel Like Christmas',\n    songArtist: 'Gwen Stefani ft. Blake Shelton',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'GV5bhZ0oZPI',\n    songTitle: 'Glittery',\n    songArtist: 'Kacey Musgraves ft. Troye Sivan',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'O89sPooBhyE',\n    songTitle: 'I Saw Mommy Kissing Santa Claus',\n    songArtist: 'Jackson 5',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'HXJcKeeXSlM',\n    songTitle: 'Naughty List',\n    songArtist: \"Liam Payne & Dixie D'Amelio\",\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'Hmw4Fu4XupE',\n    songTitle: 'Frosty The Snowman',\n    songArtist: 'Ella Fitzgerald',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'MaA7B9cu4kU',\n    songTitle: 'Someday At Christmas',\n    songArtist: 'Stevie Wonder & Andra Day',\n  },\n  {\n    videoId: 'cbZTfrhcamA',\n    songTitle: \"It's the Most Wonderful Time of the Year\",\n    songArtist: 'Andy Williams',\n  },\n  {\n    videoId: 'WaNwEkCeZrE',\n    songTitle: \"It's Beginning to Look a Lot Like Christmas\",\n    songArtist: 'Johnny Mathis',\n  },\n  {\n    videoId: 'PhKVSZsRxQM',\n    songTitle: 'This Christmas',\n    songArtist: 'Donny Hathaway',\n  },\n  {\n    videoId: 'RmF2rsDHOZc',\n    songTitle: 'Grown-Up Christmas List',\n    songArtist: 'Amy Grant',\n  },\n  {\n    videoId: '4QJKhKNWy5o',\n    songTitle: 'Take Me Home For Christmas',\n    songArtist: 'Dan + Shay',\n  },\n  {\n    videoId: 'YR1ujXx2p-I',\n    songTitle: 'Merry Christmas, Darling',\n    songArtist: 'The Carpenters',\n  },\n  {\n    videoId: 'N-PyWfVkjZc',\n    songTitle: 'Merry Christmas Everyone',\n    songArtist: \"Shakin' Stevens\",\n  },\n  {\n    videoId: 'kBXG5IpKdds',\n    songTitle: 'My Kind Of Present',\n    songArtist: 'Meghan Trainor',\n  },\n  {\n    videoId: 'jXfLpDuqO6I',\n    songTitle: 'Happy Holidays (The Holiday Season)',\n    songArtist: 'Andy Williams ft. The Osmonds',\n  },\n  {\n    videoId: 'UUriY3wmLuY',\n    songTitle: 'When Christmas Comes',\n    songArtist: 'Mariah Carey ft. John Legend',\n  },\n  {\n    videoId: 'V8HQ-YY33ys',\n    songTitle: 'Merry Christmas Baby',\n    songArtist: 'Otis Redding',\n    cc: 'LYRIC_VIDEO',\n  },\n  {\n    videoId: 'xWw3P_17Xw8',\n    songTitle: 'Christmas Without You',\n    songArtist: 'Ava Max',\n  },\n  {\n    videoId: 'E7lqYSD22jw',\n    songTitle: 'You Deserve It All',\n    songArtist: 'John Legend',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: '7nLU5i5Ec7g',\n    songTitle: \"Christmas Isn't Canceled (Just You)\",\n    songArtist: 'Kelly Clarkson',\n    cc: 'LYRIC_VIDEO',\n  },\n  {\n    videoId: '8Ja9JLuGryU',\n    songTitle: \"Baby, It's Cold Outside\",\n    songArtist: 'Glee',\n  },\n  {\n    videoId: 'PPcpd-YBlGw',\n    songTitle: 'Santa, Can’t You Hear Me',\n    songArtist: 'Kelly Clarkson & Ariana Grande',\n  },\n  {\n    videoId: 'bSHz5S3yIzg',\n    songTitle: 'It Was A… (Masked Christmas)',\n    songArtist: 'Jimmy Fallon ft. Megan Thee Stallion & Ariana Grande',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'mN3rDTAdM2o',\n    songTitle: 'Christmas Tree Farm',\n    songArtist: 'Taylor Swift',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'GqUp5K_sHd0',\n    songTitle: 'Officially Christmas',\n    songArtist: 'Dan + Shay',\n  },\n  {\n    videoId: 'dhKseUuvC7E',\n    songTitle: 'Make It To Christmas',\n    songArtist: 'Alessia Cara',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'AXi1G9WhcRY',\n    songTitle: '(Everybody’s Waitin’ For) The Man With The Bag',\n    songArtist: 'Darren Criss ft. Adam Lambert',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'UjyKUthmIqM',\n    songTitle: 'Rudolph The Red-Nosed Reindeer',\n    songArtist: 'Burl lves',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: '-tJtsKngXJU',\n    songTitle: 'Have Yourself A Merry Little Christmas',\n    songArtist: 'Frank Sinatra',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'Q_yuO8UNGmY',\n    songTitle: 'Merry Christmas',\n    songArtist: 'Ed Sheeran & Elton John',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'YBuZCwS0seE',\n    songTitle: 'Christmas Wrapping',\n    songArtist: 'The Waitresses',\n    cc: 'LYRIC_VIDEO',\n  },\n  {\n    videoId: 'gset79KMmt0',\n    songTitle: 'Snowman',\n    songArtist: 'Sia',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'HhiUOCo8LYQ',\n    songTitle: 'Santa Claus Is Coming To Town',\n    songArtist: 'Jackson 5',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'BO_g0BgWiLI',\n    songTitle: 'Here Comes Santa Claus (Right Down Santa Claus Lane)',\n    songArtist: 'Elvis Presley',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'vf4ZXBzbAio',\n    songTitle: 'Christmas (Baby Please Come Home)',\n    songArtist: 'Darlene Love',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: '7IFfZRVRbqM',\n    songTitle: 'Wrapped in Red',\n    songArtist: 'Kelly Clarkson',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'UlCy_ZDK_k0',\n    songTitle: \"I'll Be Home For Christmas\",\n    songArtist: 'Bing Crosby',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'LRP8d7hhpoQ',\n    songTitle: 'Hallelujah',\n    songArtist: 'Pentatonix',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'FezVApPddqU',\n    songTitle: 'Mele Kalikimaka',\n    songArtist: 'Bing Crosby & The Andrews Sisters',\n    cc: 'CLOSED_CAPTIONS',\n  },\n  {\n    videoId: 'sDxLmjGXnQU',\n    songTitle: 'I Need You Christmas',\n    songArtist: 'Jonas Brothers',\n    cc: 'LYRIC_VIDEO',\n  },\n];\n","import { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nexport const ShuffleButton = () => (\n  <Link to=\"/shuffle/0\">\n    <Button\n      size=\"large\"\n      variant=\"outlined\"\n      style={{ margin: '0.5rem' }}\n      endIcon={\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M17 17h-1.559l-9.7-10.673A1 1 0 0 0 5.001 6H2v2h2.559l4.09 4.5-4.09 4.501H2v2h3.001a1 1 0 0 0 .74-.327L10 13.987l4.259 4.686a1 1 0 0 0 .74.327H17v3l5-4-5-4v3z\"\n          />\n          <path\n            fill=\"currentColor\"\n            d=\"M15.441 8H17v3l5-3.938L17 3v3h-2.001a1 1 0 0 0-.74.327l-3.368 3.707 1.48 1.346L15.441 8z\"\n          />\n        </svg>\n      }\n    >\n      Shuffle Play\n    </Button>\n  </Link>\n);\n","import './Directory.css';\nimport { Link } from 'react-router-dom';\nimport ClosedCaptionOutlinedIcon from '@material-ui/icons/ClosedCaptionOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { MusicVideos } from '../../MusicVideos';\nimport { ShuffleButton } from './ShuffleButton';\n\nconst useStyles = makeStyles({\n  label: {\n    flexDirection: 'column',\n    minWidth: '420px',\n  },\n  card: {\n    margin: 8,\n    maxWidth: 320,\n  },\n  cardMedia: {\n    height: 180,\n  },\n  cardTitle: {\n    fontSize: '1rem',\n    fontWeight: 500,\n  },\n});\n\nexport const Directory = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <h1>🎄🎅🤶🎵 Christmas Sing Along 🎶☃️🎁🎄</h1>\n      <nav>\n        <ShuffleButton />\n      </nav>\n      <section className=\"directory\">\n        {MusicVideos.sort((a, b) => a.songTitle.localeCompare(b.songTitle)).map(\n          ({ videoId, songTitle, songArtist, cc }) => {\n            const youtubeThumbnailSrc = `https://img.youtube.com/vi/${videoId}/mqdefault.jpg`;\n            const youtubeThumbnailAlt = `Youtube Thumbnail of ${songTitle}`;\n\n            const ifNeedsEditPath = songTitle && songArtist ? '' : '/edit';\n\n            return (\n              <Card className={classes.card} key={videoId}>\n                <Link to={`/${videoId}${ifNeedsEditPath}`}>\n                  <CardActionArea>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      component=\"img\"\n                      alt={youtubeThumbnailAlt}\n                      title={youtubeThumbnailAlt}\n                      image={youtubeThumbnailSrc}\n                    />\n                    <CardContent>\n                      <Typography\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"h2\"\n                        className={classes.cardTitle}\n                      >\n                        {songTitle}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                      >\n                        {songArtist}\n                        {!!cc && (\n                          <ClosedCaptionOutlinedIcon className=\"cc-icon\" />\n                        )}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </Link>\n              </Card>\n            );\n          },\n        )}\n      </section>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport YouTubePlayer from 'youtube-player';\nimport type { Options } from 'youtube-player/dist/types';\n\nconst isIOS = () =>\n  [\n    'iPad Simulator',\n    'iPhone Simulator',\n    'iPod Simulator',\n    'iPad',\n    'iPhone',\n    'iPod',\n  ].includes(navigator.platform) ||\n  // iPad on iOS 13 detection\n  (navigator.userAgent.includes('Mac') && 'ontouchend' in document);\n\n/**\n *\n * @param cc\n * @returns 0 = enable fullscreen; 1 = disable fullscreen\n */\nconst disableFullscreenOnIOS = (cc: boolean) => (!cc && isIOS() ? 1 : 0);\n\nconst getYouTubePlayerOptions = (cc: boolean): Options => ({\n  height: '100%',\n  width: '100%',\n  playerVars: {\n    cc_load_policy: cc ? 1 : undefined, // show closed captions\n    iv_load_policy: 3, // remove video annotations\n    playsinline: disableFullscreenOnIOS(cc), // disable auto-fullscreen in iOS\n    modestbranding: 1, // remove YouTube icon in bottom corner\n  },\n});\n\nexport interface useYouTubeProps {\n  videoId: string;\n  cc?: boolean;\n  onVideoEnd?: Function;\n}\nexport const useYouTube = ({\n  videoId,\n  cc = false,\n  onVideoEnd,\n}: useYouTubeProps) => {\n  const [milliseconds, setMilliseconds] = useState(0);\n\n  useEffect(() => {\n    const playerOptions = getYouTubePlayerOptions(cc);\n    const player = YouTubePlayer(videoId, playerOptions);\n    player.loadVideoById(videoId);\n\n    let timer: ReturnType<typeof setInterval>;\n    const startTimer = async () => {\n      const seconds = await player.getCurrentTime();\n      setMilliseconds(seconds * 1000);\n      const increment = 100; // ms // EXTRA CREDIT: adjust interval based on `player.getPlaybackRate()`.\n      timer = setInterval(() => {\n        setMilliseconds((value) => value + increment);\n      }, increment);\n    };\n\n    const stopTimer = () => clearInterval(timer);\n\n    const handleStateChange = (event: any) => {\n      const { PLAYING, PAUSED, ENDED } = (window as any).YT.PlayerState;\n      switch (event.data) {\n        case PLAYING:\n          startTimer();\n          break;\n        case PAUSED:\n          stopTimer();\n          break;\n        case ENDED:\n          stopTimer();\n          if (onVideoEnd) onVideoEnd();\n          break;\n        default:\n          break;\n      }\n    };\n\n    const listener = player.on('stateChange', handleStateChange);\n\n    return () => {\n      stopTimer();\n      (player as any).off(listener);\n      player.destroy();\n    };\n  }, [videoId, cc, onVideoEnd]);\n\n  return { milliseconds };\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Lrc, LrcLine } from '@mebtte/react-lrc';\nimport type { MusicVideo } from '../../MusicVideos';\nimport './Lyrics.css';\n\ninterface LyricsProps extends Omit<MusicVideo, 'videoId' | 'cc'> {\n  milliseconds: number;\n}\n\nexport const Lyrics = ({\n  milliseconds,\n  songTitle,\n  songArtist,\n}: LyricsProps) => {\n  const [lrcData, setLrcData] = useState('');\n  useEffect(() => {\n    const lyricUrl = `/sing-along/lyrics/${songTitle} - ${songArtist}.lrc`;\n    fetch(lyricUrl)\n      .then((response) => response.text())\n      .then(setLrcData);\n  }, [songTitle, songArtist]);\n\n  interface ILrcLine {\n    lrcLine: LrcLine;\n    index: number;\n    active: boolean;\n  }\n  const lineRenderer = useCallback(\n    ({ lrcLine, active }: ILrcLine) => (\n      <div className={active ? 'active-line' : 'inactive-line'}>\n        {lrcLine.content}\n      </div>\n    ),\n    [],\n  );\n\n  return (\n    <Lrc\n      className=\"lrc\"\n      lrc={lrcData}\n      currentTime={milliseconds}\n      lineRenderer={lineRenderer}\n      spaceTop={0}\n    />\n  );\n};\n","import { useYouTube, useYouTubeProps } from '../../hooks/useYouTube';\nimport './Karaoke.css';\nimport { Lyrics } from './Lyrics';\nimport type { MusicVideo } from '../../MusicVideos';\n\ninterface Props extends MusicVideo, Pick<useYouTubeProps, 'onVideoEnd'> {}\n\nexport const Karaoke = ({\n  videoId,\n  songTitle,\n  songArtist,\n  cc,\n  onVideoEnd,\n}: Props) => {\n  const { milliseconds } = useYouTube({\n    videoId,\n    cc: cc === 'CLOSED_CAPTIONS',\n    onVideoEnd,\n  });\n\n  return (\n    <section className=\"karaoke\">\n      <div className=\"video\">\n        <div id={videoId} />\n      </div>\n      {!cc && (\n        <Lyrics\n          milliseconds={milliseconds}\n          songTitle={songTitle}\n          songArtist={songArtist}\n        />\n      )}\n    </section>\n  );\n};\n","import { useHistory, useParams } from 'react-router-dom';\nimport { MusicVideos } from '../../MusicVideos';\nimport { Karaoke } from '../Karaoke/Karaoke';\n\nconst randomSongList = [...MusicVideos].sort(() => 0.5 - Math.random());\n\nexport const KaraokeByShuffle = () => {\n  const { shuffleIndex } = useParams<any>();\n\n  const randomIndex = parseInt(shuffleIndex, 10) % randomSongList.length;\n  const song = randomSongList[randomIndex];\n\n  const history = useHistory();\n  const onVideoEnd = () => {\n    history.replace(`/shuffle/${randomIndex + 1}`);\n  };\n\n  return (\n    <Karaoke\n      {...song}\n      onVideoEnd={onVideoEnd}\n      key={shuffleIndex} // Rerender component to fix YouTube racing issue\n    />\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { MusicVideos } from '../../MusicVideos';\nimport { Karaoke } from '../Karaoke/Karaoke';\n\nexport const KaraokeByVideoId = () => {\n  const { videoId } = useParams<any>();\n  const selectedSong =\n    MusicVideos.filter((song) => song.videoId === videoId)[0] || {};\n\n  return <Karaoke {...selectedSong} />;\n};\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { useYouTube } from '../hooks';\n\nexport const SyncLyrics = () => {\n  const [lyricLines, setLyricLines] = useState<string[]>([]);\n  const [milliseconds, setMilliseconds] = useState<number[]>([]);\n  const { videoId } = useParams<any>();\n  const { milliseconds: youTubeTime } = useYouTube({ videoId });\n\n  return (\n    <section className=\"sync-lyrics\" style={{ display: 'flex' }}>\n      <div>\n        <div id={videoId} />\n        <br />\n        <textarea\n          style={{ border: 'solid 1px gray', height: '35%', width: '100%' }}\n          onChange={(e) => setLyricLines(e.target.value.split('\\n'))}\n        />\n        <br />\n        <Button\n          variant=\"outlined\"\n          onClick={() =>\n            setMilliseconds((current) => [...current, youTubeTime])\n          }\n        >\n          SET TIME\n        </Button>\n        <br />\n        <Button\n          variant=\"outlined\"\n          onClick={() =>\n            setMilliseconds((array) =>\n              array.filter((_, index) => index !== milliseconds.length - 1),\n            )\n          }\n        >\n          UNDO\n        </Button>\n      </div>\n\n      <div style={{ paddingLeft: '1em', maxHeight: '100vh', overflow: 'auto' }}>\n        {lyricLines.map((lyric, index) => {\n          const timestamp = milliseconds[index]\n            ? `[${new Date(0, 0, 0, 0, 0, 0, milliseconds[index])\n                .toISOString()\n                .substring(14, 21)}] `\n            : '';\n          return (\n            <div\n              /* eslint-disable  react/no-array-index-key */\n              key={index}\n            >\n              {timestamp}\n              {lyric}\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n","import { createTheme, ThemeProvider } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\nimport {\n  Directory,\n  KaraokeByShuffle,\n  KaraokeByVideoId,\n  SyncLyrics,\n} from './components';\n\nconst darkTheme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst App = () => (\n  <div className=\"App\">\n    <ThemeProvider theme={darkTheme}>\n      <Switch>\n        <Route path=\"/shuffle/:shuffleIndex\">\n          <KaraokeByShuffle />\n        </Route>\n        <Route path=\"/:videoId/edit\">\n          <SyncLyrics />\n        </Route>\n        <Route path=\"/:videoId\">\n          <KaraokeByVideoId />\n        </Route>\n        <Route path=\"/\">\n          <Directory />\n        </Route>\n      </Switch>\n    </ThemeProvider>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}