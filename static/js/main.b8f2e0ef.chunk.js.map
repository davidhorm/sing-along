{"version":3,"sources":["MusicVideos.ts","components/Directory/ShuffleButton.tsx","components/Directory/Directory.tsx","hooks/useYouTube.tsx","components/Karaoke/Lyrics.tsx","components/Karaoke/Karaoke.tsx","components/KaraokeByShuffle/KaraokeByShuffle.tsx","components/KaraokeByVideoId/KaraokeByVideoId.tsx","components/SyncLyrics.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MusicVideos","ShuffleButton","to","Button","size","variant","style","margin","endIcon","xmlns","width","height","viewBox","fill","d","useStyles","makeStyles","label","flexDirection","minWidth","card","maxWidth","cardMedia","cardTitle","fontSize","fontWeight","Directory","classes","className","sort","a","b","songTitle","localeCompare","map","videoId","songArtist","cc","youtubeThumbnailSrc","youtubeThumbnailAlt","ifNeedsEditPath","Card","CardActionArea","CardMedia","component","alt","title","image","CardContent","Typography","gutterBottom","color","disableFullscreenOnIOS","includes","navigator","platform","userAgent","document","useYouTube","onVideoEnd","milliseconds","setMilliseconds","useState","useEffect","playerOptions","playerVars","cc_load_policy","iv_load_policy","playsinline","modestbranding","getYouTubePlayerOptions","player","YouTubePlayer","timer","loadVideoById","stopTimer","clearInterval","listener","on","event","PLAYING","PAUSED","ENDED","window","YT","PlayerState","data","async","seconds","getCurrentTime","setInterval","value","startTimer","off","destroy","Lyrics","lrcData","setLrcData","lyricUrl","fetch","then","response","text","lineRenderer","useCallback","lrcLine","active","content","lrc","currentTime","spaceTop","Karaoke","id","randomSongList","Math","random","KaraokeByShuffle","shuffleIndex","useParams","randomIndex","parseInt","length","song","history","useHistory","replace","key","KaraokeByVideoId","selectedSong","filter","SyncLyrics","lyricLines","setLyricLines","youTubeTime","display","border","onChange","e","target","split","onClick","current","array","_","index","paddingLeft","maxHeight","overflow","lyric","timestamp","Date","toISOString","substring","darkTheme","createTheme","palette","type","App","ThemeProvider","theme","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"wXAOO,MAAMA,EAA4B,CACrC,CACI,QAAW,cACX,UAAa,kCACb,WAAc,gBAElB,CACI,QAAW,cACX,UAAa,cACb,WAAc,iCACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,0BACb,WAAc,YACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,qDACb,WAAc,aACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,gBACb,WAAc,kBACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,6BACb,WAAc,QACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,iBACb,WAAc,QACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,2BACb,WAAc,yBACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,sBACb,WAAc,iBACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,iBACb,WAAc,SAElB,CACI,QAAW,cACX,UAAa,gBACb,WAAc,iBAElB,CACI,QAAW,cACX,UAAa,YACb,WAAc,iBAElB,CACI,QAAW,cACX,UAAa,oCACb,WAAc,0CAElB,CACI,QAAW,cACX,UAAa,8CACb,WAAc,gBACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,iBACb,WAAc,iBAElB,CACI,QAAW,cACX,UAAa,yCACb,WAAc,iBAElB,CACI,QAAW,cACX,UAAa,aACb,WAAc,eAElB,CACI,QAAW,cACX,UAAa,cACb,WAAc,gBAElB,CACI,QAAW,cACX,UAAa,0BACb,WAAc,cAElB,CACI,QAAW,cACX,UAAa,mBACb,WAAc,2BAElB,CACI,QAAW,cACX,UAAa,qCACb,WAAc,MAElB,CACI,QAAW,cACX,UAAa,uBACb,WAAc,gBAElB,CACI,QAAW,cACX,UAAa,kCACb,WAAc,SAElB,CACI,QAAW,cACX,UAAa,2BACb,WAAc,iBACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,cACb,WAAc,OAElB,CACI,QAAW,cACX,UAAa,sBACb,WAAc,kBAElB,CACI,QAAW,cACX,UAAa,YACb,WAAc,oDAElB,CACI,QAAW,cACX,UAAa,wBACb,WAAc,OAElB,CACI,QAAW,cACX,UAAa,kBACb,WAAc,cACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,oBACb,WAAc,iBACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,YACb,WAAc,SACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,oBACb,WAAc,cACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,oBACb,WAAc,gBAElB,CACI,QAAW,cACX,UAAa,cACb,WAAc,iCACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,iCACb,WAAc,gBAElB,CACI,QAAW,cACX,UAAa,iBACb,WAAc,cACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,eACb,WAAc,gBACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,sBACb,WAAc,aACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,6BACb,WAAc,YACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,kCACb,WAAc,iCACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,WACb,WAAc,kCACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,kCACb,WAAc,YACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,eACb,WAAc,8BACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,qBACb,WAAc,kBACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,uBACb,WAAc,6BAElB,CACI,QAAW,cACX,UAAa,2CACb,WAAc,iBAElB,CACI,QAAW,cACX,UAAa,8CACb,WAAc,iBAElB,CACI,QAAW,cACX,UAAa,iBACb,WAAc,kBAElB,CACI,QAAW,cACX,UAAa,0BACb,WAAc,aAElB,CACI,QAAW,cACX,UAAa,6BACb,WAAc,cAElB,CACI,QAAW,cACX,UAAa,2BACb,WAAc,kBAElB,CACI,QAAW,cACX,UAAa,2BACb,WAAc,mBAElB,CACI,QAAW,cACX,UAAa,qBACb,WAAc,kBAElB,CACI,QAAW,cACX,UAAa,sCACb,WAAc,iCAElB,CACI,QAAW,cACX,UAAa,uBACb,WAAc,gCAElB,CACI,QAAW,cACX,UAAa,uBACb,WAAc,eACd,IAAM,GAEV,CACI,QAAW,cACX,UAAa,wBACb,WAAc,WAElB,CACI,QAAW,cACX,UAA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","file":"static/js/main.b8f2e0ef.chunk.js","sourcesContent":["export type MusicVideo = {\r\n    videoId: string;\r\n    songTitle: string;\r\n    songArtist: string;\r\n    cc?: boolean;\r\n};\r\n\r\nexport const MusicVideos: MusicVideo[] = [\r\n    {\r\n        \"videoId\": \"aAkMkVFwAoo\",\r\n        \"songTitle\": \"All I Want for Christmas Is You\",\r\n        \"songArtist\": \"Mariah Carey\"\r\n    },\r\n    {\r\n        \"videoId\": \"k4s1wSCvs8k\",\r\n        \"songTitle\": \"Let It Snow\",\r\n        \"songArtist\": \"Boyz II Men ft. Brian McKnight\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"e_AMTbO50vU\",\r\n        \"songTitle\": \"A Holly Jolly Christmas\",\r\n        \"songArtist\": \"Burl Ives\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"DocgDlM6zHI\",\r\n        \"songTitle\": \"I'll Be Home For Christmas + Cozy Little Christmas\",\r\n        \"songArtist\": \"Katy Perry\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"PF-R5ZaG71I\",\r\n        \"songTitle\": \"Feliz Navidad\",\r\n        \"songArtist\": \"Pee Wee & Charo\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"txw4gOK2alU\",\r\n        \"songTitle\": \"What Christmas Means To Me\",\r\n        \"songArtist\": \"Ciara\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"0iAZWhOaHaM\",\r\n        \"songTitle\": \"This Christmas\",\r\n        \"songArtist\": \"Ne-Yo\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"g_kj60DIq2M\",\r\n        \"songTitle\": \"Happy Xmas (War Is Over)\",\r\n        \"songArtist\": \"John Lennon & Yoko Ono\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"tIyE3IrC7r0\",\r\n        \"songTitle\": \"Like It's Christmas\",\r\n        \"songArtist\": \"Jonas Brothers\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"E8gmARGvPlI\",\r\n        \"songTitle\": \"Last Christmas\",\r\n        \"songArtist\": \"Wham!\"\r\n    },\r\n    {\r\n        \"videoId\": \"nlR0MkrRklg\",\r\n        \"songTitle\": \"Santa Tell Me\",\r\n        \"songArtist\": \"Ariana Grande\"\r\n    },\r\n    {\r\n        \"videoId\": \"LUjn3RpkcKY\",\r\n        \"songTitle\": \"Mistletoe\",\r\n        \"songArtist\": \"Justin Bieber\"\r\n    },\r\n    {\r\n        \"videoId\": \"7mKRN79ter8\",\r\n        \"songTitle\": \"Rockin' Around The Christmas Tree\",\r\n        \"songArtist\": \"Ingrid Michaelson ft. Grace VanderWaal\"\r\n    },\r\n    {\r\n        \"videoId\": \"wKhRnZZ0cJI\",\r\n        \"songTitle\": \"The Christmas Song (Merry Christmas To You)\",\r\n        \"songArtist\": \"Nat King Cole\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"wO6Kubm5tyE\",\r\n        \"songTitle\": \"Blue Christmas\",\r\n        \"songArtist\": \"Elvis Presley\"\r\n    },\r\n    {\r\n        \"videoId\": \"sE3uRRFVsmc\",\r\n        \"songTitle\": \"Let It Snow! Let It Snow! Let It Snow!\",\r\n        \"songArtist\": \"Frank Sinatra\"\r\n    },\r\n    {\r\n        \"videoId\": \"HTCFi4l3nkY\",\r\n        \"songTitle\": \"Santa Baby\",\r\n        \"songArtist\": \"Eartha Kitt\"\r\n    },\r\n    {\r\n        \"videoId\": \"DkXIJe8CaIc\",\r\n        \"songTitle\": \"Sleigh Ride\",\r\n        \"songArtist\": \"The Ronettes\"\r\n    },\r\n    {\r\n        \"videoId\": \"UwKcjAHIdJQ\",\r\n        \"songTitle\": \"Where Are You Christmas\",\r\n        \"songArtist\": \"Faith Hill\"\r\n    },\r\n    {\r\n        \"videoId\": \"5vyMuxxLsD0\",\r\n        \"songTitle\": \"Jingle Bell Rock\",\r\n        \"songArtist\": \"Daryl Hall & John Oates\"\r\n    },\r\n    {\r\n        \"videoId\": \"mmZBC92pgrE\",\r\n        \"songTitle\": \"Christmas (Baby, Please Come Home)\",\r\n        \"songArtist\": \"U2\"\r\n    },\r\n    {\r\n        \"videoId\": \"gcPY3RIvtCw\",\r\n        \"songTitle\": \"Hard Candy Christmas\",\r\n        \"songArtist\": \"Dolly Parton\"\r\n    },\r\n    {\r\n        \"videoId\": \"wKj92352UAE\",\r\n        \"songTitle\": \"Merry Christmas, Happy Holidays\",\r\n        \"songArtist\": \"NSYNC\"\r\n    },\r\n    {\r\n        \"videoId\": \"j7Tksexm680\",\r\n        \"songTitle\": \"My Only Wish (This Year)\",\r\n        \"songArtist\": \"Britney Spears\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"62rmjtZdCv8\",\r\n        \"songTitle\": \"Sleigh Ride\",\r\n        \"songArtist\": \"TLC\"\r\n    },\r\n    {\r\n        \"videoId\": \"EM2Fnp_qnE8\",\r\n        \"songTitle\": \"Underneath the Tree\",\r\n        \"songArtist\": \"Kelly Clarkson\"\r\n    },\r\n    {\r\n        \"videoId\": \"G2bx3FzgJ6o\",\r\n        \"songTitle\": \"Oh Santa!\",\r\n        \"songArtist\": \"Mariah Carey ft. Ariana Grande & Jennifer Hudson\"\r\n    },\r\n    {\r\n        \"videoId\": \"V3EYjVPRClU\",\r\n        \"songTitle\": \"Santa's Coming For Us\",\r\n        \"songArtist\": \"Sia\"\r\n    },\r\n    {\r\n        \"videoId\": \"YiadNVhaGwk\",\r\n        \"songTitle\": \"Run Rudolph Run\",\r\n        \"songArtist\": \"Chuck Berry\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"xp9rK8FmYog\",\r\n        \"songTitle\": \"Little Saint Nick\",\r\n        \"songArtist\": \"The Beach Boys\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"IuDUoAmhonE\",\r\n        \"songTitle\": \"This Gift\",\r\n        \"songArtist\": \"98º\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"GP5_dJUd3BY\",\r\n        \"songTitle\": \"Winter Wonderland\",\r\n        \"songArtist\": \"Bing Crosby\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"qUCNAnp2QAI\",\r\n        \"songTitle\": \"The Chanukah Song\",\r\n        \"songArtist\": \"Adam Sandler\"\r\n    },\r\n    {\r\n        \"videoId\": \"QLvvkTbHjHI\",\r\n        \"songTitle\": \"What's This\",\r\n        \"songArtist\": \"The Nightmare Before Christmas\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"XFF99j-0e84\",\r\n        \"songTitle\": \"Please Come Home for Christmas\",\r\n        \"songArtist\": \"Jon Bon Jovi\"\r\n    },\r\n    {\r\n        \"videoId\": \"j-_1-uJ6Ml4\",\r\n        \"songTitle\": \"One More Sleep\",\r\n        \"songArtist\": \"Leona Lewis\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"hLf0-lro8X8\",\r\n        \"songTitle\": \"Jingle Bells\",\r\n        \"songArtist\": \"Frank Sinatra\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"uoMHmsL2t3A\",\r\n        \"songTitle\": \"Step Into Christmas\",\r\n        \"songArtist\": \"Elton John\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"uSjq7x67kzM\",\r\n        \"songTitle\": \"Driving Home For Christmas\",\r\n        \"songArtist\": \"Chris Rea\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"3ZT9_H4-hbM\",\r\n        \"songTitle\": \"You Make It Feel Like Christmas\",\r\n        \"songArtist\": \"Gwen Stefani ft. Blake Shelton\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"GV5bhZ0oZPI\",\r\n        \"songTitle\": \"Glittery\",\r\n        \"songArtist\": \"Kacey Musgraves ft. Troye Sivan\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"O89sPooBhyE\",\r\n        \"songTitle\": \"I Saw Mommy Kissing Santa Claus\",\r\n        \"songArtist\": \"Jackson 5\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"HXJcKeeXSlM\",\r\n        \"songTitle\": \"Naughty List\",\r\n        \"songArtist\": \"Liam Payne & Dixie D'Amelio\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"Hmw4Fu4XupE\",\r\n        \"songTitle\": \"Frosty The Snowman\",\r\n        \"songArtist\": \"Ella Fitzgerald\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"MaA7B9cu4kU\",\r\n        \"songTitle\": \"Someday At Christmas\",\r\n        \"songArtist\": \"Stevie Wonder & Andra Day\"\r\n    },\r\n    {\r\n        \"videoId\": \"cbZTfrhcamA\",\r\n        \"songTitle\": \"It's the Most Wonderful Time of the Year\",\r\n        \"songArtist\": \"Andy Williams\"\r\n    },\r\n    {\r\n        \"videoId\": \"WaNwEkCeZrE\",\r\n        \"songTitle\": \"It's Beginning to Look a Lot Like Christmas\",\r\n        \"songArtist\": \"Johnny Mathis\"\r\n    },\r\n    {\r\n        \"videoId\": \"PhKVSZsRxQM\",\r\n        \"songTitle\": \"This Christmas\",\r\n        \"songArtist\": \"Donny Hathaway\"\r\n    },\r\n    {\r\n        \"videoId\": \"RmF2rsDHOZc\",\r\n        \"songTitle\": \"Grown-Up Christmas List\",\r\n        \"songArtist\": \"Amy Grant\"\r\n    },\r\n    {\r\n        \"videoId\": \"4QJKhKNWy5o\",\r\n        \"songTitle\": \"Take Me Home For Christmas\",\r\n        \"songArtist\": \"Dan + Shay\"\r\n    },\r\n    {\r\n        \"videoId\": \"YR1ujXx2p-I\",\r\n        \"songTitle\": \"Merry Christmas, Darling\",\r\n        \"songArtist\": \"The Carpenters\"\r\n    },\r\n    {\r\n        \"videoId\": \"N-PyWfVkjZc\",\r\n        \"songTitle\": \"Merry Christmas Everyone\",\r\n        \"songArtist\": \"Shakin' Stevens\"\r\n    },\r\n    {\r\n        \"videoId\": \"kBXG5IpKdds\",\r\n        \"songTitle\": \"My Kind Of Present\",\r\n        \"songArtist\": \"Meghan Trainor\"\r\n    },\r\n    {\r\n        \"videoId\": \"jXfLpDuqO6I\",\r\n        \"songTitle\": \"Happy Holidays (The Holiday Season)\",\r\n        \"songArtist\": \"Andy Williams ft. The Osmonds\"\r\n    },\r\n    {\r\n        \"videoId\": \"UUriY3wmLuY\",\r\n        \"songTitle\": \"When Christmas Comes\",\r\n        \"songArtist\": \"Mariah Carey ft. John Legend\"\r\n    },\r\n    {\r\n        \"videoId\": \"V8HQ-YY33ys\",\r\n        \"songTitle\": \"Merry Christmas Baby\",\r\n        \"songArtist\": \"Otis Redding\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"xWw3P_17Xw8\",\r\n        \"songTitle\": \"Christmas Without You\",\r\n        \"songArtist\": \"Ava Max\"\r\n    },\r\n    {\r\n        \"videoId\": \"E7lqYSD22jw\",\r\n        \"songTitle\": \"You Deserve It All\",\r\n        \"songArtist\": \"John Legend\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"7nLU5i5Ec7g\",\r\n        \"songTitle\": \"Christmas Isn't Canceled (Just You)\",\r\n        \"songArtist\": \"Kelly Clarkson\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"iM-EZekk72U\",\r\n        \"songTitle\": \"Holiday Rock\",\r\n        \"songArtist\": \"Neon Trees\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"8Ja9JLuGryU\",\r\n        \"songTitle\": \"Baby, It's Cold Outside\",\r\n        \"songArtist\": \"Glee\"\r\n    },\r\n    {\r\n        \"videoId\": \"PPcpd-YBlGw\",\r\n        \"songTitle\": \"Santa, Can’t You Hear Me\",\r\n        \"songArtist\": \"Kelly Clarkson & Ariana Grande\"\r\n    },\r\n    {\r\n        \"videoId\": \"bSHz5S3yIzg\",\r\n        \"songTitle\": \"It Was A… (Masked Christmas)\",\r\n        \"songArtist\": \"Jimmy Fallon ft. Megan Thee Stallion & Ariana Grande\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"mN3rDTAdM2o\",\r\n        \"songTitle\": \"Christmas Tree Farm\",\r\n        \"songArtist\": \"Taylor Swift\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"GqUp5K_sHd0\",\r\n        \"songTitle\": \"Officially Christmas\",\r\n        \"songArtist\": \"Dan + Shay\"\r\n    },\r\n    {\r\n        \"videoId\": \"dhKseUuvC7E\",\r\n        \"songTitle\": \"Make It To Christmas\",\r\n        \"songArtist\": \"Alessia Cara\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"AXi1G9WhcRY\",\r\n        \"songTitle\": \"(Everybody’s Waitin’ For) The Man With The Bag\",\r\n        \"songArtist\": \"Darren Criss ft. Adam Lambert\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"UjyKUthmIqM\",\r\n        \"songTitle\": \"Rudolph The Red-Nosed Reindeer\",\r\n        \"songArtist\": \"Burl lves\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"-tJtsKngXJU\",\r\n        \"songTitle\": \"Have Yourself A Merry Little Christmas\",\r\n        \"songArtist\": \"Frank Sinatra\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"Q_yuO8UNGmY\",\r\n        \"songTitle\": \"Merry Christmas\",\r\n        \"songArtist\": \"Ed Sheeran & Elton John\",\r\n        \"cc\": true\r\n    },\r\n    {\r\n        \"videoId\": \"YBuZCwS0seE\",\r\n        \"songTitle\": \"Christmas Wrapping\",\r\n        \"songArtist\": \"The Waitresses\",\r\n        \"cc\": true\r\n    }\r\n];\r\n","import { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nexport const ShuffleButton = () => (\n  <Link to=\"/shuffle/0\">\n    <Button\n      size=\"large\"\n      variant=\"outlined\"\n      style={{ margin: '0.5rem' }}\n      endIcon={\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M17 17h-1.559l-9.7-10.673A1 1 0 0 0 5.001 6H2v2h2.559l4.09 4.5-4.09 4.501H2v2h3.001a1 1 0 0 0 .74-.327L10 13.987l4.259 4.686a1 1 0 0 0 .74.327H17v3l5-4-5-4v3z\"\n           />\n          <path\n            fill=\"currentColor\"\n            d=\"M15.441 8H17v3l5-3.938L17 3v3h-2.001a1 1 0 0 0-.74.327l-3.368 3.707 1.48 1.346L15.441 8z\"\n           />\n        </svg>\n      }\n    >\n      Shuffle Play\n    </Button>\n  </Link>\n);\n","import './Directory.css';\nimport { Link } from 'react-router-dom';\nimport ClosedCaptionOutlinedIcon from '@material-ui/icons/ClosedCaptionOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { MusicVideos } from '../../MusicVideos';\nimport { ShuffleButton } from './ShuffleButton';\n\nconst useStyles = makeStyles({\n  label: {\n    flexDirection: 'column',\n    minWidth: '420px',\n  },\n  card: {\n    margin: 8,\n    maxWidth: 320,\n  },\n  cardMedia: {\n    height: 180,\n  },\n  cardTitle: {\n    fontSize: '1rem',\n    fontWeight: 500,\n  },\n});\n\nexport const Directory = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <h1>🎄🎅🤶🎵 Christmas Sing Along 🎶☃️🎁🎄</h1>\n      <nav>\n        <ShuffleButton />\n      </nav>\n      <section className=\"directory\">\n        {MusicVideos\n          .sort((a, b) =>\n            a.songTitle.localeCompare(b.songTitle),\n          )\n          .map(({ videoId, songTitle, songArtist, cc }) => {\n            const youtubeThumbnailSrc = `https://img.youtube.com/vi/${videoId}/mqdefault.jpg`;\n            const youtubeThumbnailAlt = `Youtube Thumbnail of ${songTitle}`;\n\n            const ifNeedsEditPath = songTitle && songArtist ? '' : '/edit';\n\n            return (\n              <Card className={classes.card} key={videoId}>\n                <Link to={`/${videoId}${ifNeedsEditPath}`}>\n                  <CardActionArea>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      component=\"img\"\n                      alt={youtubeThumbnailAlt}\n                      title={youtubeThumbnailAlt}\n                      image={youtubeThumbnailSrc}\n                    />\n                    <CardContent>\n                      <Typography\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"h2\"\n                        className={classes.cardTitle}\n                      >\n                        {songTitle}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                      >\n                        {songArtist}\n                        {cc && (\n                          <ClosedCaptionOutlinedIcon className=\"cc-icon\" />\n                        )}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </Link>\n              </Card>\n            );\n          })}\n      </section>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport YouTubePlayer from 'youtube-player';\nimport type { Options } from 'youtube-player/dist/types';\n\nconst isIOS = () =>\n  [\n    'iPad Simulator',\n    'iPhone Simulator',\n    'iPod Simulator',\n    'iPad',\n    'iPhone',\n    'iPod',\n  ].includes(navigator.platform) ||\n  // iPad on iOS 13 detection\n  (navigator.userAgent.includes('Mac') && 'ontouchend' in document);\n\n/**\n *\n * @param cc\n * @returns 0 = enable fullscreen; 1 = disable fullscreen\n */\nconst disableFullscreenOnIOS = (cc: boolean) => !cc && isIOS() ? 1 : 0;\n\nconst getYouTubePlayerOptions = (cc: boolean): Options => ({\n  height: '100%',\n  width: '100%',\n  playerVars: {\n    cc_load_policy: 1, // show closed captions\n    iv_load_policy: 3, // remove video annotations\n    playsinline: disableFullscreenOnIOS(cc), // disable auto-fullscreen in iOS\n    modestbranding: 1, // remove YouTube icon in bottom corner\n  },\n});\n\nexport interface useYouTubeProps {\n  videoId: string;\n  cc?: boolean;\n  onVideoEnd?: Function;\n}\nexport const useYouTube = ({\n  videoId,\n  cc = false,\n  onVideoEnd,\n}: useYouTubeProps) => {\n  const [milliseconds, setMilliseconds] = useState(0);\n\n  useEffect(() => {\n    const playerOptions = getYouTubePlayerOptions(cc);\n    const player = YouTubePlayer(videoId, playerOptions);\n    player.loadVideoById(videoId);\n\n    let timer: ReturnType<typeof setInterval>;\n    const startTimer = async () => {\n      const seconds = await player.getCurrentTime();\n      setMilliseconds(seconds * 1000);\n      const increment = 100; // ms // EXTRA CREDIT: adjust interval based on `player.getPlaybackRate()`.\n      timer = setInterval(() => {\n        setMilliseconds((value) => value + increment);\n      }, increment);\n    };\n\n    const stopTimer = () => clearInterval(timer);\n\n    const handleStateChange = (event: any) => {\n      const { PLAYING, PAUSED, ENDED } = (window as any).YT.PlayerState;\n      switch (event.data) {\n        case PLAYING:\n          startTimer();\n          break;\n        case PAUSED:\n          stopTimer();\n          break;\n        case ENDED:\n          stopTimer();\n          if (onVideoEnd) onVideoEnd();\n          break;\n        default:\n          break;\n      }\n    };\n\n    const listener = player.on('stateChange', handleStateChange);\n\n    return () => {\n      stopTimer();\n      (player as any).off(listener);\n      player.destroy();\n    };\n  }, [videoId, cc, onVideoEnd]);\n\n  return { milliseconds };\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Lrc, LrcLine } from '@mebtte/react-lrc';\nimport type { MusicVideo } from '../../MusicVideos';\nimport './Lyrics.css';\n\ninterface LyricsProps extends Omit<MusicVideo, 'videoId'> {\n  milliseconds: number;\n}\n\nexport const Lyrics = ({\n  milliseconds,\n  songTitle,\n  songArtist,\n  cc,\n}: LyricsProps) => {\n  const [lrcData, setLrcData] = useState('');\n  useEffect(() => {\n    const lyricUrl = !cc\n      ? `/sing-along/lyrics/${songTitle} - ${songArtist}.lrc`\n      : '';\n    fetch(lyricUrl)\n      .then((response) => response.text())\n      .then(setLrcData);\n  }, [songTitle, songArtist, cc]);\n\n  interface ILrcLine {\n    lrcLine: LrcLine;\n    index: number;\n    active: boolean;\n  }\n  const lineRenderer = useCallback(\n    ({ lrcLine, active }: ILrcLine) => (\n      <div className={active ? 'active-line' : 'inactive-line'}>\n        {lrcLine.content}\n      </div>\n    ),\n    [],\n  );\n\n  return (\n    <Lrc\n      className=\"lrc\"\n      lrc={!cc ? lrcData : '[00:00.0] [CC Available]'}\n      currentTime={milliseconds}\n      lineRenderer={lineRenderer}\n      spaceTop={0}\n    />\n  );\n};\n","import { useYouTube, useYouTubeProps } from '../../hooks/useYouTube';\nimport './Karaoke.css';\nimport { Lyrics } from './Lyrics';\nimport type { MusicVideo } from '../../MusicVideos';\n\ninterface Props extends MusicVideo, Pick<useYouTubeProps, 'onVideoEnd'> { }\n\nexport const Karaoke = ({\n  videoId,\n  songTitle,\n  songArtist,\n  cc,\n  onVideoEnd,\n}: Props) => {\n  const { milliseconds } = useYouTube({\n    videoId,\n    cc,\n    onVideoEnd,\n  });\n\n  return (\n    <section className=\"karaoke\">\n      <div className=\"video\">\n        <div id={videoId} />\n      </div>\n      {!cc && (\n        <Lyrics\n          milliseconds={milliseconds}\n          songTitle={songTitle}\n          songArtist={songArtist}\n          cc={cc}\n        />\n      )}\n    </section>\n  );\n};\n","import { useHistory, useParams } from 'react-router-dom';\nimport { MusicVideos } from '../../MusicVideos';\nimport { Karaoke } from '../Karaoke/Karaoke';\n\nconst randomSongList = [...MusicVideos].sort(() => 0.5 - Math.random());\n\nexport const KaraokeByShuffle = () => {\n  const { shuffleIndex } = useParams<any>();\n\n  const randomIndex = parseInt(shuffleIndex, 10) % randomSongList.length;\n  const song = randomSongList[randomIndex];\n\n  const history = useHistory();\n  const onVideoEnd = () => {\n    history.replace(`/shuffle/${randomIndex + 1}`);\n  };\n\n  return (\n    <Karaoke\n      {...song}\n      onVideoEnd={onVideoEnd}\n      key={shuffleIndex} // Rerender component to fix YouTube racing issue\n    />\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { MusicVideos } from '../../MusicVideos';\nimport { Karaoke } from '../Karaoke/Karaoke';\n\nexport const KaraokeByVideoId = () => {\n  const { videoId } = useParams<any>();\n  const selectedSong = MusicVideos.filter((song) => song.videoId === videoId)[0] || {};\n\n  return <Karaoke {...selectedSong} />;\n};\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { useYouTube } from '../hooks';\n\nexport const SyncLyrics = () => {\n  const [lyricLines, setLyricLines] = useState<string[]>([]);\n  const [milliseconds, setMilliseconds] = useState<number[]>([]);\n  const { videoId } = useParams<any>();\n  const { milliseconds: youTubeTime } = useYouTube({ videoId });\n\n  return (\n    <section className=\"sync-lyrics\" style={{ display: 'flex' }}>\n      <div>\n        <div id={videoId} />\n        <br />\n        <textarea\n          style={{ border: 'solid 1px gray', height: '35%', width: '100%' }}\n          onChange={(e) => setLyricLines(e.target.value.split('\\n'))}\n        />\n        <br />\n        <Button\n          variant=\"outlined\"\n          onClick={() =>\n            setMilliseconds((current) => [...current, youTubeTime])\n          }\n        >\n          SET TIME\n        </Button>\n        <br />\n        <Button\n          variant=\"outlined\"\n          onClick={() =>\n            setMilliseconds((array) =>\n              array.filter((_, index) => index !== milliseconds.length - 1),\n            )\n          }\n        >\n          UNDO\n        </Button>\n      </div>\n\n      <div style={{ paddingLeft: '1em', maxHeight: '100vh', overflow: 'auto' }}>\n        {lyricLines.map((lyric, index) => {\n          const timestamp = milliseconds[index]\n            ? `[${new Date(0, 0, 0, 0, 0, 0, milliseconds[index])\n              .toISOString()\n              .substring(14, 21)}] `\n            : '';\n          return (\n            <div\n              /* eslint-disable  react/no-array-index-key */\n              key={index}\n            >\n              {timestamp}\n              {lyric}\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n","import { createTheme, ThemeProvider } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\nimport {\n  Directory,\n  KaraokeByShuffle,\n  KaraokeByVideoId,\n  SyncLyrics,\n} from './components';\n\nconst darkTheme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst App = () => (\n  <div className=\"App\">\n    <ThemeProvider theme={darkTheme}>\n      <Switch>\n        <Route path=\"/shuffle/:shuffleIndex\">\n          <KaraokeByShuffle />\n        </Route>\n        <Route path=\"/:videoId/edit\">\n          <SyncLyrics />\n        </Route>\n        <Route path=\"/:videoId\">\n          <KaraokeByVideoId />\n        </Route>\n        <Route path=\"/\">\n          <Directory />\n        </Route>\n      </Switch>\n    </ThemeProvider>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}